{"version":3,"sources":["../src/view_nav.js"],"names":["define","$","CustomEvents","Repository","View","Selectors","SELECTORS","MODIFIERS","SORT_OPTION","DISPLAY_OPTION","updatePreferences","filter","value","type","updateUserPreferences","preferences","registerSelector","root","Selector","find","events","activate","on","e","data","option","target","hasClass","sortoption","attr","sortcolumn","entityView","region","init","originalEvent","preventDefault","displayoptions","reset"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage the courses or course modules view for the Resource Library.\n *\n * Inspired from the Course overview block.\n * @package    local_resourcelibrary\n * @copyright  2020 CALL Learning 2020 - Laurent David laurent@call-learning.fr\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(\n    [\n        'jquery',\n        'core/custom_interaction_events',\n        'local_resourcelibrary/repository',\n        'local_resourcelibrary/view',\n        'local_resourcelibrary/selectors'\n    ],\n    function (\n        $,\n        CustomEvents,\n        Repository,\n        View,\n        Selectors\n    ) {\n\n        var SELECTORS = {\n            MODIFIERS: '[data-region=\"display-modifiers\"]',\n            SORT_OPTION: '[data-sort]',\n            DISPLAY_OPTION: '[data-display-option]'\n        };\n\n        /**\n         * Update the user preference for the block.\n         *\n         * @param {String} filter The type of filter: display/sort.\n         * @param {String} value The current preferred value.\n         */\n        var updatePreferences = function (filter, value) {\n            var type = null;\n            if (filter === 'display') {\n                type = 'local_resourcelibrary_user_view_preference';\n            } else if (filter === 'sort') {\n                type = 'local_resourcelibrary_user_sort_preference';\n            }\n            if (type) {\n                Repository.updateUserPreferences({\n                    preferences: [\n                        {\n                            type: type,\n                            value: value\n                        }\n                    ]\n                });\n            }\n        };\n\n        /**\n         * Event listener for the Display filter (cards, list).\n         *\n         * @param {object} root The root element for the overview block\n         */\n        var registerSelector = function (root) {\n\n            var Selector = root.find(SELECTORS.MODIFIERS);\n\n            CustomEvents.define(Selector, [CustomEvents.events.activate]);\n            Selector.on(\n                CustomEvents.events.activate,\n                SELECTORS.SORT_OPTION,\n                function (e, data) {\n                    var option = $(e.target);\n\n                    if (option.hasClass('active')) {\n                        // If it's already active then we don't need to do anything.\n                        return;\n                    }\n\n                    var sortoption = option.attr('data-sort');\n                    var sortcolumn = option.attr('data-column');\n                    // Update model.\n                    root.find(Selectors.entityView.region).attr('data-sort-column', sortcolumn);\n                    root.find(Selectors.entityView.region).attr('data-sort-order', sortoption);\n                    updatePreferences('sort', sortcolumn + ',' + sortoption);\n\n                    // Reset the views.\n                    View.init(root);\n                    data.originalEvent.preventDefault();\n                }\n            );\n            CustomEvents.define(Selector, [CustomEvents.events.activate]);\n            Selector.on(\n                CustomEvents.events.activate,\n                SELECTORS.DISPLAY_OPTION,\n                function (e, data) {\n                    var option = $(e.target);\n\n                    if (option.hasClass('active')) {\n                        return;\n                    }\n\n                    var displayoptions = option.attr('data-display-option');\n\n                    // Update model.\n                    root.find(Selectors.entityView.region).attr('data-display', displayoptions);\n                    updatePreferences('display', displayoptions);\n\n                    // Reset the views.\n                    View.reset(root);\n                    data.originalEvent.preventDefault();\n                }\n            );\n        };\n\n        /**\n         * Initialise the timeline view navigation by adding event listeners to\n         * the navigation elements.\n         *\n         * @param {object} root The root element for the Resource Library\n         */\n        var init = function (root) {\n            root = $(root);\n            registerSelector(root);\n        };\n\n        return {\n            init: init\n        };\n    });\n"],"file":"view_nav.min.js"}