{"version":3,"sources":["../src/view.js"],"names":["define","$","Repository","PagedContentFactory","PubSub","CustomEvents","Notification","Templates","CourseEvents","Selectors","PagedContentEvents","TEMPLATES","ENTITES_CARDS","ENTITIES_LIST","NOENTITIES","NUMCOURSES_PERPAGE","loadedPages","lastPage","lastLimit","namespace","currentFilters","entityType","courseId","getDisplayModifierValues","root","entityRegion","find","entityView","region","display","attr","sort","column","order","displaycategories","DEFAULT_PAGED_CONTENT_CONFIG","ignoreControlWhileLoading","controlPlacementBottom","persistentLimitKey","getEntities","modifiers","filters","limit","offset","getFilteredCourseList","categoryid","sorting","getFilteredModulesList","courseid","getPagedContentContainer","index","renderEntities","pageData","entities","currentTemplate","map","entity","category","length","render","noentitiesimg","setLimit","registerPagedEventHandlers","event","SET_ITEMS_PER_PAGE_LIMIT","subscribe","bind","getItemPerPage","rootNode","itemsPerPage","pagingLimit","parseInt","value","active","initializePagedContent","Math","random","config","extend","eventNamespace","pagedContentPromise","createWithLimit","pagesData","actions","promises","forEach","currentPage","pageNumber","allItemsLoaded","push","additionalValues","pagePromise","then","catch","exception","html","js","replaceNodeContents","registerEventListeners","events","activate","refresh","reset","entityList","pagedContentPage","init","document","on","e","formdata"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage the courses or course modules view for the Resource Library.\n *\n * Inspired from the Course overview block.\n * @package    local_resourcelibrary\n * @copyright  2020 CALL Learning 2020 - Laurent David laurent@call-learning.fr\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(\n    [\n        'jquery',\n        'local_resourcelibrary/repository',\n        'core/paged_content_factory',\n        'core/pubsub',\n        'core/custom_interaction_events',\n        'core/notification',\n        'core/templates',\n        'core_course/events',\n        'local_resourcelibrary/selectors',\n        'core/paged_content_events',\n    ],\n    function (\n        $,\n        Repository,\n        PagedContentFactory,\n        PubSub,\n        CustomEvents,\n        Notification,\n        Templates,\n        CourseEvents,\n        Selectors,\n        PagedContentEvents\n    ) {\n\n        var TEMPLATES = {\n            ENTITES_CARDS: 'local_resourcelibrary/view-cards',\n            ENTITIES_LIST: 'local_resourcelibrary/view-list',\n            NOENTITIES: 'local_resourcelibrary/no-entities'\n        };\n\n        var NUMCOURSES_PERPAGE = [12, 24, 48];\n\n        var loadedPages = [];\n\n        var lastPage = 0;\n\n        var lastLimit = 0;\n\n        var namespace = null;\n\n        var currentFilters = [];\n\n        var entityType = 'course';\n\n        var courseId = 0;\n\n        /**\n         * Get display modifier values from DOM.\n         * This will either change the sorting order, the way we display the cards or list\n         * and if we display categories or sections\n         * @param {object} root The root element for the entities view.\n         * @return {object} display modifier Set.\n         */\n        var getDisplayModifierValues = function (root) {\n            var entityRegion = root.find(Selectors.entityView.region);\n            return {\n                display: entityRegion.attr('data-display'),\n                sort: { column: entityRegion.attr('data-sort-column'), order: entityRegion.attr('data-sort-order') },\n                displaycategories: entityRegion.attr('data-displaycategories'),\n            };\n        };\n\n        // We want the paged content controls below the paged content area.\n        // and the controls should be ignored while data is loading.\n        var DEFAULT_PAGED_CONTENT_CONFIG = {\n            ignoreControlWhileLoading: true,\n            controlPlacementBottom: true,\n            persistentLimitKey: 'local_resourcelibrary_user_paging_preference'\n        };\n\n        /**\n         * Get enrolled entities from backend.\n         * @param {object} modifiers The display modifier for this view.\n         * @param {object} filters The filters for this view.\n         * @param {int} limit The number of entities to show.\n         * @param {int} offset to start with The number of entities to show.\n         * @return {promise} Resolved with an array of entities.\n         */\n        var getEntities = function (modifiers, filters, limit, offset) {\n            if (entityType === 'course') {\n                return Repository.getFilteredCourseList({\n                    categoryid: 0,\n                    sorting: [{ column: modifiers.sort.column, order: modifiers.sort.order}],\n                    filters: filters,\n                    limit: limit,\n                    offset: offset\n                });\n            } else {\n                return Repository.getFilteredModulesList({\n                    courseid: courseId,\n                    sorting: [{ column: modifiers.sort.column, order: modifiers.sort.order}],\n                    filters: filters,\n                    limit: limit,\n                    offset: offset\n                });\n            }\n        };\n\n        /**\n         * Get the paged content container element.\n         *\n         * @param  {Object} root The entity overview container\n         * @param  {Number} index Rendered page index.\n         * @return {Object} The rendered paged container.\n         */\n        var getPagedContentContainer = function (root, index) {\n            return root.find('[data-region=\"paged-content-page\"][data-page=\"' + index + '\"]');\n        };\n\n        /**\n         * Render the dashboard entities.\n         *\n         * @param {object} root The root element for the entities view.\n         * @param {array} pageData containing the page data as setup in LoadPage\n         * @return {promise} jQuery promise resolved after rendering is complete.\n         */\n        var renderEntities = function (root, pageData) {\n\n            var entities = [];\n            if (pageData.entities !== undefined) {\n                entities = pageData.entities;\n            }\n            var filters = getDisplayModifierValues(root);\n\n            var currentTemplate = '';\n            if (filters.display === 'list') {\n                currentTemplate = TEMPLATES.ENTITIES_LIST;\n            } else {\n                currentTemplate = TEMPLATES.ENTITES_CARDS;\n            }\n\n            // Delete the entity category if it is not to be displayed.\n            if (filters.displaycategories !== 'on') {\n                entities = entities.map(function (entity) {\n                    delete entity.category;\n                    return entity;\n                });\n            }\n\n            if (entities.length) {\n                return Templates.render(currentTemplate, {\n                    entities: entities,\n                });\n            } else {\n                var noentitiesimg = root.find(Selectors.entityView.region).attr('data-noentitiesimg');\n                return Templates.render(TEMPLATES.NOENTITIES, {\n                    noentitiesimg: noentitiesimg\n                });\n            }\n        };\n\n        /**\n         * Return the callback to be passed to the subscribe event\n         *\n         * @param {Number} limit The paged limit that is passed through the event\n         */\n        var setLimit = function (limit) {\n            this.find(Selectors.entityView.region).attr('data-paging', limit);\n        };\n\n        /**\n         * Intialise the paged list and cards views on page load.\n         * Returns an array of paged contents that we would like to handle here\n         *\n         * @param {object} root The root element for the entities view\n         * @param {string} namespace The namespace for all the events attached\n         */\n        var registerPagedEventHandlers = function (root, namespace) {\n            var event = namespace + PagedContentEvents.SET_ITEMS_PER_PAGE_LIMIT;\n            PubSub.subscribe(event, setLimit.bind(root));\n        };\n\n        /**\n         * Get the maximum item per page\n         * @param rootNode\n         * @returns {number[]}\n         */\n        var getItemPerPage = function(rootNode) {\n            var itemsPerPage = NUMCOURSES_PERPAGE;\n            var pagingLimit = parseInt(rootNode.find(Selectors.entityView.region).attr('data-paging'), 10);\n            if (pagingLimit) {\n                itemsPerPage = NUMCOURSES_PERPAGE.map(function (value) {\n                    var active = false;\n                    if (value === pagingLimit) {\n                        active = true;\n                    }\n\n                    return {\n                        value: value,\n                        active: active\n                    };\n                });\n            }\n            return itemsPerPage;\n        };\n\n        /**\n         * Intialise the entities list and cards views on page load.\n         *\n         * @param {object} root The root element for the entities view.\n         * @param {object} content The content element for the entities view.\n         */\n        var initializePagedContent = function (root) {\n            namespace = \"local_resourcelibrary\" + root.attr('id') + \"_\" + Math.random();\n\n            var itemsPerPage = getItemPerPage(root);\n\n\n            var modifiers = getDisplayModifierValues(root);\n            var config = $.extend({}, DEFAULT_PAGED_CONTENT_CONFIG);\n            config.eventNamespace = namespace;\n\n            var pagedContentPromise = PagedContentFactory.createWithLimit(\n                itemsPerPage,\n                function (pagesData, actions) {\n                    var promises = [];\n\n                    pagesData.forEach(function (pageData) {\n                        var currentPage = pageData.pageNumber;\n                        var limit = pageData.limit;\n\n                        // Reset local variables if limits have changed.\n                        if (lastLimit !== limit) {\n                            loadedPages = [];\n                            lastPage = 0;\n                        }\n\n                        if (lastPage === currentPage) {\n                            // If we are on the last page and have it's data then load it from cache.\n                            actions.allItemsLoaded(lastPage);\n                            promises.push(renderEntities(root, loadedPages[currentPage]));\n                            return;\n                        }\n                        lastLimit = limit;\n                        var additionalValues = {};\n                        if (entityType !== 'course') {\n                            additionalValues =  courseId;\n                        }\n                        var pagePromise = getEntities(\n                            modifiers,\n                            currentFilters,\n                            limit,\n                            limit * (currentPage - 1),\n                            additionalValues\n                        ).then(function (entities) {\n                            // Finished setting up the current page.\n                            loadedPages[currentPage] = {\n                                entities: entities\n                            };\n                            // Set the last page to either the current or next page.\n                            if (loadedPages[currentPage].entities.length < pageData.limit) {\n                                lastPage = currentPage;\n                                actions.allItemsLoaded(currentPage);\n                            }\n                            return renderEntities(root, loadedPages[currentPage]);\n                        }).catch(Notification.exception);\n\n                        promises.push(pagePromise);\n                    });\n\n                    return promises;\n                },\n                config\n            );\n\n            pagedContentPromise.then(function (html, js) {\n                registerPagedEventHandlers(root, namespace);\n                return Templates.replaceNodeContents(root.find(Selectors.entityView.region), html, js);\n            }).catch(Notification.exception);\n        };\n\n        /**\n         * Listen to, and handle events for the Resource Library page.\n         *\n         * @param {Object} root resourcelibrary page\n         */\n        var registerEventListeners = function (root) {\n            CustomEvents.define(root, [\n                CustomEvents.events.activate\n            ]);\n        };\n\n        /**\n         * Intialise the entities list and cards views on page load.\n         *\n         * @param {object} root The root element for the entities view.\n         */\n        var refresh = function (root) {\n            root = $(root);\n            loadedPages = [];\n            lastPage = 0;\n            initializePagedContent(root);\n            entityType = root.attr('data-entity-type');\n            courseId = parseInt(root.attr('data-parent-id'));\n            if (!root.attr('data-init')) {\n                registerEventListeners(root);\n                root.attr('data-init', true);\n            }\n        };\n        var init = function (root) {\n            this.refresh(root);\n            // Reset the views when we receive a change in filters.\n            $(document).on('resourcelibrary-filters-change',\n                function(e, formdata) {\n                    currentFilters = formdata;\n                    this.refresh(root);\n                }.bind(this)\n            );\n        };\n\n\n        /**\n\n         * Reset the entities views to their original\n         * state on first page load.entityOffset\n         *\n         * This is called when configuration has changed for the event lists\n         * to cause them to reload their data.\n         *\n         * @param {Object} root The root element for the timeline view.\n         */\n        var reset = function (root) {\n            if (loadedPages.length > 0) {\n                loadedPages.forEach(function (entityList, index) {\n                    var pagedContentPage = getPagedContentContainer(root, index);\n                    renderEntities(root, entityList).then(function (html, js) {\n                        return Templates.replaceNodeContents(pagedContentPage, html, js);\n                    }).catch(Notification.exception);\n                });\n            } else {\n                refresh(root);\n            }\n        };\n\n        return {\n            init: init,\n            reset: reset,\n            refresh: refresh,\n        };\n    });\n"],"file":"view.min.js"}