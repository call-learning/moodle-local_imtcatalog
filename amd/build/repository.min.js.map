{"version":3,"sources":["../src/repository.js"],"names":["define","Ajax","Notification","getFilteredCourseList","args","promise","call","methodname","getFilteredModulesList","updateUserPreferences","fail","exception"],"mappings":"AAsBAA,OAAM,oCAAC,CAAC,WAAD,CAAc,mBAAd,CAAD,CAAqC,SAASC,CAAT,CAAeC,CAAf,CAA6B,CAuEpE,MAAO,CACHC,qBAAqB,CA5DG,QAAxBA,CAAAA,qBAAwB,CAASC,CAAT,CAAe,IAOnCC,CAAAA,CAAO,CAAGJ,CAAI,CAACK,IAAL,CAAU,CALV,CACVC,UAAU,CAAE,4CADF,CAEVH,IAAI,CAAGA,CAFG,CAKU,CAAV,EAAqB,CAArB,CAPyB,CASvC,MAAOC,CAAAA,CACV,CAiDM,CAEHG,sBAAsB,CAvCG,QAAzBA,CAAAA,sBAAyB,CAASJ,CAAT,CAAe,IAOpCC,CAAAA,CAAO,CAAGJ,CAAI,CAACK,IAAL,CAAU,CALV,CACVC,UAAU,CAAE,mDADF,CAEVH,IAAI,CAAGA,CAFG,CAKU,CAAV,EAAqB,CAArB,CAP0B,CASxC,MAAOC,CAAAA,CACV,CA2BM,CAGHI,qBAAqB,CAbG,QAAxBA,CAAAA,qBAAwB,CAASL,CAAT,CAAe,CAMvCH,CAAI,CAACK,IAAL,CAAU,CALI,CACVC,UAAU,CAAE,mCADF,CAEVH,IAAI,CAAEA,CAFI,CAKJ,CAAV,EAAqB,CAArB,EACKM,IADL,CACUR,CAAY,CAACS,SADvB,CAEH,CAEM,CAKV,CA5EK,CAAN","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to retrieve a course list from the server.\n *\n * @package    local_resourcelibrary\n * @copyright  2020 CALL Learning 2020 - Laurent David laurent@call-learning.fr\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['core/ajax', 'core/notification'], function(Ajax, Notification) {\n\n    /**\n     * Retrieve a list of courses.\n     *\n     * Valid args are:\n     * filters                  array of filters values (see get_filtered_courses_parameters)\n     *\n     * @method getFilteredCourseList\n     * @param {object} args The request arguments\n     * @return {promise} Resolved with an array of courses\n     */\n    var getFilteredCourseList = function(args) {\n\n        var request = {\n            methodname: 'local_resourcelibrary_get_filtered_courses',\n            args:  args\n        };\n\n        var promise = Ajax.call([request])[0];\n\n        return promise;\n    };\n\n    /**\n     * Retrieve a list of modules.\n     *\n     * Valid args are:\n     * filters                  array of filters values (see get_filtered_courses_parameters)\n     *\n     * @method getFilteredCourseList\n     * @param {object} args The request arguments\n     * @return {promise} Resolved with an array of courses\n     */\n    var getFilteredModulesList = function(args) {\n\n        var request = {\n            methodname: 'local_resourcelibrary_get_filtered_course_content',\n            args:  args\n        };\n\n        var promise = Ajax.call([request])[0];\n\n        return promise;\n    };\n\n    /**\n     * Update the user preferences.\n     *\n     * @param {Object} args Arguments send to the webservice.\n     *\n     * Sample args:\n     * {\n     *     preferences: [\n     *         {\n     *             type: 'block_example_user_sort_preference'\n     *             value: 'title'\n     *         }\n     *     ]\n     * }\n     */\n    var updateUserPreferences = function(args) {\n        var request = {\n            methodname: 'core_user_update_user_preferences',\n            args: args\n        };\n\n        Ajax.call([request])[0]\n            .fail(Notification.exception);\n    };\n\n    return {\n        getFilteredCourseList: getFilteredCourseList,\n        getFilteredModulesList: getFilteredModulesList,\n        updateUserPreferences: updateUserPreferences\n    };\n});\n"],"file":"repository.min.js"}